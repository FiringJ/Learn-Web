防抖：在第一次触发事件时，不立即执行函数，而是给出一个期限值。比如200ms
    -> 如果在200ms内没有再次触发滚动事件，那么就执行函数
    -> 如果在200ms内再次触发滚动事件，那么当前的计时取消，重新开始计时
    效果：如果短时间内大量触发同一事件，只会执行一次函数
    对于短时间内连续触发的事件（上面的滚动事件），防抖的含义就是让某个时间期限（如上面的1000毫秒）内，事件处理函数只执行一次

节流：类似控制阀门一样定期开放的函数，也就是让函数执行一次后，在某个时间段内暂时失效，过了这段时间后再重新激活（类似于技能冷却时间）
效果：如果短时间内大量触发同一事件，那么在函数执行一次之后，该函数在指定的时间期限内不再工作，直至过了这段时间才重新生效。

应用场景：
->  搜索框input事件，例如要支持输入实时搜索可以使用节流方案（间隔一段时间就必须查询相关内容），或者实现输入间隔大于某个值（如500ms），就当做用户输入完成，
    然后开始搜索，具体使用哪种方案要看业务需求。
->  页面resize事件，常见于需要做页面适配的时候。需要根据最终呈现的页面情况进行dom渲染（这种情形一般是使用防抖，因为只需要判断最后一次的变化情况）
->  用户获取验证码，获取之后间隔60s，节流